on: [push, pull_request]

name: Code coverage with grcov
env:
    CARGO_TERM_COLOR: always


jobs:
  grcov:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal

      - name: Clean previous build artifacts
        uses: actions-rs/cargo@v1
        with:
          command: clean

      - name: Execute tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --features ci --no-fail-fast
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: >-
            -Cinstrument-coverage -Ccodegen-units=1 -Cllvm-args=--inline-threshold=0 -Clink-dead-code
            -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests
          RUSTDOCFLAGS: >-
            -Cinstrument-coverage -Ccodegen-units=1 -Cllvm-args=--inline-threshold=0 -Clink-dead-code
            -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests

      - name: Gather coverage data
        uses: actions-rs/grcov@v0.1
        with:
          config: ./grcov.yml

      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
          flag-name: run-${{ matrix.os }}
          parallel: true

  grcov_finalize:
    needs: grcov
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls finalization
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
